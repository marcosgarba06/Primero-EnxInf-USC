neofetch
# Para almacenar os datos, por eficiencia, usamos unha matriz. Da igual que estean en fila que en columna
# rnorm(n¬∫ datos, media, desviaci√≥n t√≠pica)
x = matrix(rnorm(n*ns, mean = mu, sd = sigma), nrow = n, ncol = ns); x
source("~/EnxInf/Primero/SegundoCuatri/Estadistica/Practicas/Practica5/practica 5.R")
#Ejercicio 1
ns = 500 #numero de muestras
mu = 5 #Media de la distribucion
sigma = 1 #Desviacion tipica de la distribuci√≥n
n = 10 #tama√±o 1 de la muestra
# Para almacenar los datos, por eficiencia, usamos una matriz. Da igual que esten en fila o en columna
# rnorm(n¬∫ datos, media, desviaci√≥n t√≠pica)
# rnorm genera n valores aleatorios de una distribuci√≥n normal con media y desviaci√≥n est√°ndar dadas.
#Se hace n*ns porque queremos que haya 500 muestras de n elemenos
x = matrix(rnorm(n*ns, mean = mu, sd = sigma), nrow = n, ncol = ns); x
# Calculamos las T de Student
est = (media-mu)/(sc/sqrt(n))
# Creamos un histograma para comprobar que √© unha campana de xeito coma unha T de student
hist(est, freq = F)
#Ejercicio 1
ns = 500 #numero de muestras
mu = 5 #Media de la distribucion
sigma = 1 #Desviacion tipica de la distribuci√≥n
n = 10 #tama√±o 1 de la muestra
# Para almacenar los datos, por eficiencia, usamos una matriz. Da igual que esten en fila o en columna
# rnorm(n¬∫ datos, media, desviaci√≥n t√≠pica)
# rnorm genera n valores aleatorios de una distribuci√≥n normal con media y desviaci√≥n est√°ndar dadas.
# Se hace n*ns porque queremos que haya 500 muestras de n elemenos
x = matrix(rnorm(n*ns, mean = mu, sd = sigma), nrow = n, ncol = ns); x
# Usamos el comando apply para hacer la media y la cuasidesviaci√≥n
# apply a√±ade elementos a una matriz/data frame haciendo una funcion determinda
# apply(datos, [1 == filas, 2 == columnas], funci√≥n)
media = apply(x, 2, mean)
sc = apply(x, 2, sd)
# Calculamos las T de Student
est = (media-mu)/(sc/sqrt(n))
# Creamos un histograma para comprobar que √© unha campana de xeito coma unha T de student
hist(est, freq = F)
# Usamos la funci√≥n density para "discretizar" el histograma y comprobar que en efecto es una T de student
hist(est, freq = F, ylim = c(0, 0.4))
lines(density(est), col = 2, lwd = 2)
# Usamos la funci√≥n density para "discretizar" el histograma y comprobar que en efecto es una T de student
hist(est, freq = F, ylim = c(0, 0.4))
lines(density(est), col = 2, lwd = 2)
# Vucle para todos los tama√±os muestrales que pide:
n = c(10, 20, 100, 500)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x
media = apply(x, 2, mean)
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i]))
hist(est, freq = F, ylim = c(0, 0.4))
lines(density(est), col = 2, lwd = 2)
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt=n[i]-1, lwd = 2, col = 4)
}
par(mfrow=c(2,2)) #Para mostrar un 2x2 de graficas
# Vucle para todos los tama√±os muestrales que pide:
n = c(10, 20, 100, 500)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x
media = apply(x, 2, mean)
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i]))
hist(est, freq = F, ylim = c(0, 0.4))
lines(density(est), col = 2, lwd = 2)
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt=n[i]-1, lwd = 2, col = 4)
}
par(mfrow=c(1,1))
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt=n[i]-1, lwd = 2, col = 4)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x #Crear matriz de la muestra
media = apply(x, 2, mean) #A√±adir media y cuasidesviacion
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i])) #Estadistico T de Student
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
lines(density(est), col = 2, lwd = 2) #Superpone la linea
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt=n[i]-1, lwd = 2, col = 4)
}
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
lines(density(est), col = 2, lwd = 2) #Superpone la linea
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt=n[i]-1, lwd = 2, col = 4)
# Vucle para todos los tama√±os muestrales que pide:
n = c(10, 20, 100, 500)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x #Crear matriz de la muestra
media = apply(x, 2, mean) #A√±adir media y cuasidesviacion
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i])) #Estadistico T de Student
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
lines(density(est), col = 2, lwd = 2) #Superpone la linea
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt=n[i]-1, lwd = 2, col = 4)
}
par(mfrow=c(1,1))
par(mfrow=c(2,2)) #Para mostrar un 2x2 de graficas
# Vucle para todos los tama√±os muestrales que pide:
n = c(10, 20, 100, 500)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x #Crear matriz de la muestra
media = apply(x, 2, mean) #A√±adir media y cuasidesviacion
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i])) #Estadistico T de Student
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
lines(density(est), col = 2, lwd = 2) #Superpone la linea
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt=n[i]-1, lwd = 2, col = 4)
}
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x #Crear matriz de la muestra
media = apply(x, 2, mean) #A√±adir media y cuasidesviacion
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i])) #Estadistico T de Student
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt=n[i]-1, lwd = 2, col = 4)
#ejercicio 1
#generar muestras de tama√±o n (distribuci√≥n normal)
n = 10
x10 = rnorm(n,mean=5,sd=1)
x10				 #estas son las muestras con n=10  //
mean(x) 		 	 #media de las muestras
n = 500
x = rnorm(n,mean=5,sd=1)
x				#muestra con n=500
mean(x)
#para saber el numero que deja un 96% (1 - alpha/2)//
qt(0.96,df=9)	#9 grados de libertad	//
t=sqrt(n)*(mean(x)-5)/sd(x)    #sd es la cuasidesviaci√≥n tipica   //
t
M=500
n=10
t=numeric(M) 		#para que sepa que es un vector
for (i in 1:M){		#para crear 500 muestras con tdestudent(de tama√±o 10)
x=rnorm(n,mean=5,sd=1)
t[i]=sqrt(n)*(mean(x)-5)/sd(x)}
t
quantile(t,prob=0.96)   #quantil 96% | es el Zalphamedios
mean(x)-2.07*sd(x)/sqrt(n)		#extremo inferior del intervalo de confianza
mean(x)+2.07*sd(x)/sqrt(n)		#extremo superior
lines(xseq, dt(xseq, df = n[i] - 1), lwd = 2, col = 4)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x #Crear matriz de la muestra
media = apply(x, 2, mean) #A√±adir media y cuasidesviacion
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i])) #Estadistico T de Student
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
lines(density(est), col = 2, lwd = 2) #Superpone la linea
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt(xseq, df = n[i] - 1), lwd = 2, col = 4)
}
# Vucle para todos los tama√±os muestrales que pide:
n = c(10, 20, 100, 500)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x #Crear matriz de la muestra
media = apply(x, 2, mean) #A√±adir media y cuasidesviacion
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i])) #Estadistico T de Student
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
lines(density(est), col = 2, lwd = 2) #Superpone la linea
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt(xseq, df = n[i] - 1), lwd = 2, col = 4)
#dt eval√∫a la funcion de densidad de la distribuci√≥n t de Student en la secuencia
# dt(puntos, grados de libertad)
}
# Vucle para todos los tama√±os muestrales que pide:
n = c(10, 20, 100, 500)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x #Crear matriz de la muestra
media = apply(x, 2, mean) #A√±adir media y cuasidesviacion
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i])) #Estadistico T de Student
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
lines(density(est), col = 2, lwd = 2) #Superpone la linea
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt(xseq, df = n[i] - 1), lwd = 2, col = 4)
#dt eval√∫a la funcion de densidad de la distribuci√≥n t de Student en la secuencia
# dt(puntos, grados de libertad)
}
par(mfrow=c(1,1))
par(mfrow=c(2,2)) #Para mostrar un 2x2 de graficas
# Vucle para todos los tama√±os muestrales que pide:
n = c(10, 20, 100, 500)
for (i in 1:length(n)) {
x = matrix(rnorm(n[i]*ns, mean = mu, sd = sigma), nrow = n[i], ncol = ns); x #Crear matriz de la muestra
media = apply(x, 2, mean) #A√±adir media y cuasidesviacion
sc = apply(x, 2, sd)
est = (media-mu)/(sc/sqrt(n[i])) #Estadistico T de Student
hist(est, freq = F, ylim = c(0, 0.4)) #Crea histograma
lines(density(est), col = 2, lwd = 2) #Superpone la linea
xseq = seq(min(est), max(est), len = 1000)
lines(xseq, dt(xseq, df = n[i] - 1), lwd = 2, col = 4)
#dt eval√∫a la funcion de densidad de la distribuci√≥n t de Student en la secuencia
# dt(puntos, grados de libertad)
}
library(LearningStats)
#Intervalo: xÃÑ ¬± t_n-1,1-ùú∂/2 * (s_c/sqrt(n)) para que 1-ùú∂ = 0.929
x = c(12.5, 13.2, 11.8, 12.9, 13.5, 12.2, 11.9, 12.7, 13.1, 12.4)
#Ejercicio 3
# X_A == "Tiempo de respuesta del servidor A (s)"
# X_B == "Tiempo de respuesta del servidor B (s)"
# X_A y X_B independientes
# X_A‚Ç¨N(u_A, o¬≤_A); X_B‚Ç¨N(u_B, o¬≤_B)
nA = 15; medA = 120; varA = 25
#Ejercicio 3
# X_A == "Tiempo de respuesta del servidor A (s)"
# X_B == "Tiempo de respuesta del servidor B (s)"
# X_A y X_B independientes
# X_A‚Ç¨N(u_A, o¬≤_A); X_B‚Ç¨N(u_B, o¬≤_B)
nA = 15; medA = 120; varA = 25
nB = 12; medB = 130; varB = 30
?diffmean.CI
#Ejercicio 3
# X_A == "Tiempo de respuesta del servidor A (s)"
# X_B == "Tiempo de respuesta del servidor B (s)"
# X_A y X_B independientes
# X_A‚Ç¨N(u_A, o¬≤_A); X_B‚Ç¨N(u_B, o¬≤_B)
nA = 15; medA = 120; varA = 25
nB = 12; medB = 130; varB = 30
?diffmean.CI
# Intervalos de confianza para la diferencia de dos medias
# Hacemos sqrt ya que necesitamos S e non S¬≤
diffmean.CI(x1 = medA, x2 = medB, n1 = nA, n2 = nB, s1 = sqrt(varA), s2 = sqrt(varB), conf.level = 0.95)
# Exercicio 4
x = matrix(rbinom (500*100, size = 1, prob = 0.7), nrow = 100, ncol = 500)
media = apply(x, 2, mean)
y = matrix(rnorm (500*100, mean = 0.7, sd = 0.7*0.3/100), nrow = 100, ncol = 500)
#media2 = apply(y, 2, mean)
hist(media, ylim = c(0,100))
lines(density(y), col = 2, lwd = 2)
# Exercicio 4 resolto
ns = 500
n = 100
prob = 0.7
x = matrix(rnorm (ns*n, size = 1, prob = prob), nrow = n, ncol = ns)  #Crea matriz muestras
prop = apply(x, 2, mean) #Calcula la propocion de cada muestra y la a√±ade a la matriz
hist(prop, freq = F)
lines(density(prop), lwd = 2, col = 2)
# Grella de valores no eixo x onde avalias f(x)
xseq = seq(min(prop), max(prop), len = 1000)
lines(xseq, dnorm(xseq, mean = prob, sd = sqrt(prob * (1-prob)/n)), col = 4, lwd = 2)
ns = 500
n = 100
prob = 0.7
x = matrix(rnorm (ns*n, size = 1, prob = prob), nrow = n, ncol = ns)  #Crea matriz muestras
for (i in 1:M){
x=rbinom(n,size=1,prob=0.7)
pgorro[i]=mean(x)}
M=500
n=100
pgorro=numeric(M) 		#para que sepa que es un vector
for (i in 1:M){
x=rbinom(n,size=1,prob=0.7)
pgorro[i]=mean(x)}
pgorro
x
mean(x)
hist(pgorro)
plot(density(pgorro))
qnorm(0.975)
x=rbinom(n,size=1,prob=0.7)
pgorro=mean(x)
#extremos IC:         al tener el 0.7 dentro del intervalo se acierta
pgorro-1.96*sqrt(pgorro*(1-pgorro)/n)
pgorro+1.96*sqrt(pgorro*(1-pgorro)/n)
# Exercicio 4
x = matrix(rbinom (500*100, size = 1, prob = 0.7), nrow = 100, ncol = 500)
# Exercicio 4 resolto
ns = 500
n = 100
prob = 0.7
x = matrix(rnorm (ns*n, size = 1, prob = prob), nrow = n, ncol = ns)
prop = apply(x, 2, mean)
x = matrix(rbinom (500*100, size = 1, prob = 0.7), nrow = n, ncol = ns)
# Exercicio 4 resolto
ns = 500
n = 100
prob = 0.7
x = matrix(rbinom(ns*n, size = 1, prob = prob), nrow = n, ncol = ns)
prop = apply(x, 2, mean)
hist(prop, freq = F)
lines(density(prop), lwd = 2, col = 2)
# Grella de valores no eixo x onde avalias f(x)
xseq = seq(min(prop), max(prop), len = 1000)
lines(xseq, dnorm(xseq, mean = prob, sd = sqrt(prob * (1-prob)/n)), col = 4, lwd = 2)
ns = 500
n = 100
prob = 0.7
x = matrix(rbinom(ns*n, size = 1, prob = prob), nrow = n, ncol = ns)  #Crea matriz muestras
prop = apply(x, 2, mean) #Calcula la propocion de cada muestra y la a√±ade a la matriz
hist(prop, freq = F)
lines(density(prop), lwd = 2, col = 2)
# Secuencia de valores donde se evalua f(x), para dibujar la linea correcta
xseq = seq(min(prop), max(prop), len = 1000)
lines(xseq, dnorm(xseq, mean = prob, sd = sqrt(prob * (1-prob)/n)), col = 4, lwd = 2)
# Ejercicio 5
## X === "Estar satisfecho con la aplicaci√≥n"
# X‚Ç¨Ber(p)
# n = 200; exitos = 150
# xÃÑ =150/200
# Calcular (^p +- z_1-\alpha/2 * sqrt(^p(1-^p)/n))
n = 200
exitos = 150
proportion.CI(x = exitos, n = n, conf.level = 0.95)
# Ejercicio 5
## X === "Estar satisfecho con la aplicaci√≥n"
# X‚Ç¨Ber(p)
# n = 200; exitos = 150
# xÃÑ =150/200
# Calcular (^p +- z_1-\alpha/2 * sqrt(^p(1-^p)/n))
n = 200
exitos = 150
proportion.CI(x = exitos, n = n, conf.level = 0.95)
library(LearningStats)
# Ejercicio 5
## X === "Estar satisfecho con la aplicaci√≥n"
# X‚Ç¨Ber(p)
# n = 200; exitos = 150
# xÃÑ =150/200
# Calcular (^p +- z_1-\alpha/2 * sqrt(^p(1-^p)/n))
n = 200
exitos = 150
proportion.CI(x = exitos, n = n, conf.level = 0.95)
#Ejercicio 6
# X === "Detectouse coma un acceso sospeitoso no m√©todo 1"
# Y === "Detectouse coma un acceso sospeitoso no m√©todo 2"
n1 = 400
x1 = 280
n2 = 350
x2 = 245
diffproportion.CI(x1 = x1, x2 = x2, n1 = n1, n2 = n2, conf.level = 0.95)
#Ejercicio 7
ns = 500 #Numero de muestras
n = c(5,10,20,50) #Tama√±os
mu = 3
sigma = 0.5
par(mfrow=c(2,2))
for (i in 1:length(n)){
# Generamos ns muestras de tama√±o n[i] de N(mu, sigma^2)
x = matrix(rnorm(n[i]*ns,mean=mu,sd=sigma),nrow=n[i],ncol=ns)
cuasivar = apply(x,2,var)
est = (n[i]-1)*cuasivar/sigmaÀÜ2
hist(est,freq=FALSE,col="grey",xlab=" ",ylab=" ",main=paste("n=",n[i]),
xlim=c(0,90))
lines(density(est),lwd=2,col=2)
x = seq(min(est),max(est),by=0.01)
fx = dchisq(x,df=n[i]-1)
lines(x,fx,lwd=2,col=4)
}
#Ejercicio 7
ns = 500 #Numero de muestras
n = c(5,10,20,50) #Tama√±os
mu = 3
sigma = 0.5
par(mfrow=c(2,2))
for (i in 1:length(n)){
# Generamos ns muestras de tama√±o n[i] de N(mu, sigma^2)
x = matrix(rnorm(n[i]*ns,mean=mu,sd=sigma),nrow=n[i],ncol=ns)
cuasivar = apply(x,2,var)
est = (n[i]-1)*cuasivar/sigmaÀÜ2
hist(est,freq=FALSE,col="grey",xlab=" ",ylab=" ",main=paste("n=",n[i]),
xlim=c(0,90))
lines(density(est),lwd=2,col=2)
x = seq(min(est),max(est),by=0.01)
fx = dchisq(x,df=n[i]-1)
lines(x,fx,lwd=2,col=4)
}
for (i in 1:length(n)){
# Generamos ns muestras de tama√±o n[i] de N(mu, sigma^2)
x = matrix(rnorm(n[i]*ns,mean=mu,sd=sigma),nrow=n[i],ncol=ns)
cuasivar = apply(x,2,var)
est = (n[i]-1)*cuasivar/sigmaÀÜ2
hist(est,freq=FALSE,col="grey",xlab=" ",ylab=" ",main=paste("n=",n[i]),
xlim=c(0,90))
lines(density(est),lwd=2,col=2)
x = seq(min(est),max(est),by=0.01)
fx = dchisq(x,df=n[i]-1)
lines(x,fx,lwd=2,col=4)
}
par(mfrow=c(2,2))
#Ejercicio 7
ns = 500 #Numero de muestras
n = c(5,10,20,50) #Tama√±os
mu = 3
sigma = 0.5
par(mfrow=c(2,2))
for (i in 1:length(n)){
# Generamos ns muestras de tama√±o n[i] de N(mu, sigma^2)
x = matrix(rnorm(n[i]*ns,mean=mu,sd=sigma),nrow=n[i],ncol=ns)
cuasivar = apply(x,2,var)
est = (n[i]-1)*cuasivar/sigmaÀÜ2
hist(est,freq=FALSE,col="grey",xlab=" ",ylab=" ",main=paste("n=",n[i]),
xlim=c(0,90))
lines(density(est),lwd=2,col=2)
x = seq(min(est),max(est),by=0.01)
fx = dchisq(x,df=n[i]-1)
lines(x,fx,lwd=2,col=4)
}
#Ejercicio 7
ns = 500 #Numero de muestras
n = c(5,10,20,50) #Tama√±os
mu = 3
sigma = 0.5
par(mfrow=c(2,2))
for (i in 1:length(n)){
# Generamos ns muestras de tama√±o n[i] de N(mu, sigma^2)
x = matrix(rnorm(n[i]*ns,mean=mu,sd=sigma),nrow=n[i],ncol=ns)
cuasivar = apply(x,2,var)
est = (n[i]-1)*cuasivar/sigma^2
hist(est,freq=FALSE,col="grey",xlab=" ",ylab=" ",main=paste("n=",n[i]), xlim=c(0,90))
lines(density(est),lwd=2,col=2)
x = seq(min(est),max(est),by=0.01)
fx = dchisq(x,df=n[i]-1)
lines(x,fx,lwd=2,col=4)
}
