Mean.test(x=x, mu=mu0 ,alternative = "greater", alpha = 0.1)
#Ejercicio 2
#X:"Puntuación escala Snellen de agudeza visual"
#X \in N(mu,sigma²)
#Contraste para a media(mu)
#H0: mu<=0.55
#Ha: mu > 0.55
x = c(0.71,0.66,0.64,0.49,0.80,0.67,0.52,0.81,0.55,0.65)
mu0 = 0.55
Mean.test(x=x, mu=mu0 ,alternative = "greater", alpha = 0.1)
n=72
exitos = 41
install.packages("LearningStats")
library(LearningStats)
proportion.test(x=exito,n=n, p0=0.5,alternative = "grater", alpha=0.1)
n=72
exitos = 41
install.packages("LearningStats")
install.packages("LearningStats")
library(LearningStats)
proportion.test(x=exitos,n=n, p0=0.5,alternative = "grater", alpha=0.1)
#H0: p <= 0.5
#Ha: p > 0.5
library(LearningStats)
n=72
exitos = 41
proportion.test(x=exitos,n=n, p0=0.5,alternative = "greater", alpha=0.1)
x = c(0.71,0.66,0.64,0.49,0.80,0.67,0.52,0.81,0.55,0.65
Mean.test(x=x, mu=mu0 ,alternative = "greater", alpha = 0.1)
x = c(0.71,0.66,0.64,0.49,0.80,0.67,0.52,0.81,0.55,0.65)
mu0 = 0.55
Mean.test(x=x, mu=mu0 ,alternative = "greater", alpha = 0.1)
#H0: sigma² = 0.5
#Ha: sigma² != 0.5
#RR ()
mostra = c(9.9, 8.7,10.2,10.5,9.6,9.2,9.8,10.9,9.8)
sigma02= 0.5
variance.test(x=mostra, sigma02=0.5, alternative = "two.sided", alpha = 0.01)
#Exercicio 4
#X1:"Tempo de execución do algoritmo A"
#X2"  "    "    "       "    "      B"
#X1 \in N(μ1, σ²)
#X2 \in N(μ2, σ²)
A= c(12.3,15.4,21.7,17.2,38.8,42.1,10.54,23.3,35.6,28.4)
B= c(21.2,18.6,25.1,14.7,52.3,65.2,40.8,43.4,35.6,42.0)
diffmean.test(x1=A,x2=B, pounded=F,var.equal=T, alternative=)
diffmean.test(x1=A,x2=B, paired=F,var.equal=T, alternative= "two.sided", alpha = 0.05)
#Exercicio 5
#A: "Tiempo de respuesta antes de la capacitacion"
#B: "  "    "      "  después  "  "      "      "
previo=c(68, 77, 94, 73, 37, 131, 77, 24, 99, 629, 116)
post=c(95, 90, 86, 58, 47, 121, 136, 65, 131, 630, 104)
diffmean.test(x1 = previo, x2 = post, paired=T,alternative = "less",alpha = 0.01)
diffproportion.test(x1=exitos2 , x2=exitos1, n1=n2 ,n2=n1 , alternative = "less", alpha = 0.01)
#Exercicio 6:
#X1: "Usuario de red no segura afectado por malware"
#X2: "Usuario de red segura afectado por malware"
#X1 \in Ber(p1)
#X2 \in Ber(p2)
n1 = 307; exitos1 = 230
n2 = 75; exitos2 = 30
diffproportion.test(x1=exitos2 , x2=exitos1, n1=n2 ,n2=n1 , alternative = "less", alpha = 0.01)
?diffvariance.test
?diffvariance.test(x1 = A, x2 = B, alternative = "two.sided", alpha = 0.05)
diffvariance.test(x1 = A, x2 = B, alternative = "two.sided", alpha = 0.05)
A=c(34.5, 36.1, 35.9, 33.4, 34.8, 36.2, 35.6, 34.7, 35.0, 34.3, 35.1, 34.9)
B=c(27.8, 28.3, 29.0, 28.5, 28.2, 29.3, 28.7, 29.5, 28.8, 28.4, 29.1, 28.6)
diffvariance.test(x1 = A, x2 = B, alternative = "two.sided", alpha = 0.05)
A=c(34.5, 36.1, 35.9, 33.4, 34.8, 36.2, 35.6, 34.7, 35.0, 34.3, 35.1, 34.9)
B=c(27.8, 28.3, 29.0, 28.5, 28.2, 29.3, 28.7, 29.5, 28.8, 28.4, 29.1, 28.6)
diffvariance.test(x1 = A, x2 = B, alternative = "two.sided", alpha = 0.05)
