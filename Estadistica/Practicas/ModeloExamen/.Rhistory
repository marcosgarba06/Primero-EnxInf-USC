#headeres si tiene cabecera, sep es como se separan las columnas y dec es el simboolo de decimal
head(datos)
dim(datos)
#Ejercicio 1:
#Cargar datos
datos = read.table("0_datos_modelo_examen.txt",header=T,sep=";",dec=".")
#headeres si tiene cabecera, sep es como se separan las columnas y dec es el simboolo de decimal
head(datos)
dim(datos)
#Variable cualitativa ordinal (nivel)
nivelDatos=factor(datos$nivel, nivel=("bajo", "medio", "alto"))
#Variable cualitativa ordinal (nivel)
nivelDatos=factor(datos$nivel, nivel=c("bajo", "medio", "alto"))
#Variable cualitativa ordinal (nivel)
nivelDatos=factor(datos$nivel, nivel=c("bajo", "medio", "alto"))
class(datos$nivel)
mostra=c("b","b","r","mb","m","b","b","r","mm",
"b", "mb","mb", "r", "b", "m", "b", "mb",
"mb", "b", "r")
#X = Grao de stisfaccion
#Cualitativa ordinal
class(mostra)
#Como es una cualitativa oridinal la tabla es completa
ni = table(nivelDatos); ni
#Variable cualitativa ordinal (nivel)
nivelDatos=factor(datos$nivel, levels=c("bajo", "medio", "alto"))
#Como es una cualitativa oridinal la tabla es completa
ni = table(nivelDatos); ni
n = length(nivelDatos); n
fi = ni / n
fi = ni / n; fi
fi = ni/n; fi
Ni = cumsum(ni); ni
Fi = cumsum(fi); Fi
barplot(nivelDatos)
barplot(ni, color = "green", border = "black", main = "Diagrama de barras de fi", space = 2)
#headeres si tiene cabecera, sep es como se separan las columnas y dec es el simboolo de decimal
#Se comprueba si esta bien:
head(datos)
barplot(ni, color = "green", border = "black", main = "Diagrama de barras de fi", space = 2)
barplot(ni, colour = "green", border = "black", main = "Diagrama de barras de ni", space = 2)
barplot(ni, colour = "green", border = "black", main = "Diagrama de barras de ni", space = 2)
barplot(ni, colour = "green", border = "black", main = "Diagrama de barras de ni", space = 2)
barplot(ni, col = "green", border = "black", main = "Diagrama de barras de ni", space = 2)
barplot(fi)
pie(fi)
pie(ni)
pie(fi)
pie(ni)
pie(ni)
barplot(fi)
pie(fi)
pie(ni)
#Cuantitativa discreta (lote)
lotef = factor(datos$lote)
ni=table(datos$lote)
ni=table(datos$lote);ni
fi= ni/n
n = length(datos$lote)
fi= ni/n
Ni = cumsum(ni);Ni
Fi = Ni/n
Fi = Ni/n;Fi
Fi2= cumsum(fi); fi
Fi2= cumsum(fi); Fi2
boxplot(ni)
barplot(ni)
barplot(fi)
barplot(ni)
barplot(fi)
tab=cbind(ni,fi,Ni,Fi);tab
tab=cbind(ni,fi,Ni,Fi);tab
pie(ni)
#Ejercicio 2
rendimiento = datos$produccion/datos$recursos
mean(datos$lote);sd(datos$lote);var(datos$lote)
rendA = rendimiento[datos$grupo = "A"]
#Ejercicio 2
rendimiento = datos$produccion/datos$recursos
rendA = rendimiento[datos$grupo = "A"]
rendA = rendimiento[datos$grupo == "A"]
#Para obtener si hay atipicos se hace boxplot
boxplot(rendA)
#Lectura de datos
datos=read.table("0_datos_modelo_examen.txt",header=T,sep=";",dec=".")
### EJERCICIO 2
rendimiento=datos$produccion/datos$recursos
rendA=rendimiento[datos$grupo=="A"]
#Deteccion de atipicos
boxplot(rendA) #hay 5 at?picos superiores
#Identificacion de los atipicos
sort(rendA)
#Hay 5 atipicos superiores, para obtenerlos se ordena la muestra y son los 5 mayores:
sort(rendA)
#Hay 5 atipicos superiores, para obtenerlos se ordena la muestra y son los 5 mayores:
sort(rendA)
modelo = lm(datos$calidad ~ datos$tiempo_proceso)
plot(datos$tiempo_proceso,datos$calidad,pch=16)
abline(modelo,col=2,lwd=2)
modelo
#Coeficiente de correlacion
cor(datos$tiempo_proceso,datos$calidad)#relacion lineal decreciente no muy fuerte
#Coeficiente de correlacion
cor(datos$tiempo_proceso,datos$calidad)#relacion lineal decreciente no muy fuerte
#Coeficiente de determinacion
summary(modelo)
Mean.CI(datos$presion, conf.level = 0.97)
#Ejercicio 4
library(LearningStats)
Mean.CI(datos$presion, conf.level = 0.97)
#Ejercicio 5:
#H0: #H0: sigma2 <= 90^2
#Ha: sigma2 > 90^2
?variance.test()
vaiance.test(x=datos$produccion, sigma02=90^2, alrernative = "greater")
#Ejercicio 4
library(LearningStats)
variance.test(x=datos$produccion, sigma02=90^2, alrernative = "greater")
variance.test(x=datos$produccion, sigma02=90^2, alternative = "greater")
### EJERCICIO 5
#H0: sigma2 <= 85^2
#Ha: sigma2 > 85^2
variance.test(datos$produccion,sigma02 = 90^2, alternative = "greater", alpha = 0.01)
### EJERCICIO 4
library(LearningStats)
Mean.CI(datos$presion,conf.level = 0.97)
### EJERCICIO 5
#H0: sigma2 <= 85^2
#Ha: sigma2 > 85^2
variance.test(datos$produccion,sigma02 = 90^2, alternative = "greater", alpha = 0.01)
### EJERCICIO 5
#H0: sigma2 <= 85^2
#Ha: sigma2 > 85^2
variance.test(datos$produccion,sigma02 = 90^2, alternative = "greater", alpha = 0.01)
variance.test(x=datos$produccion, sigma02=90^2, alternative = "greater", alpha = 0.01)
variance.test(x=datos$produccion, sigma02=90^2, alternative = "greater", alpha = 0.05)
